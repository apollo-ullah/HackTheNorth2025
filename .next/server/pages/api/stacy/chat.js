"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/stacy/chat";
exports.ids = ["pages/api/stacy/chat"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("openai");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fstacy%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fstacy%2Fchat.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fstacy%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fstacy%2Fchat.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_stacy_chat_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/stacy/chat.ts */ \"(api)/./pages/api/stacy/chat.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_stacy_chat_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_stacy_chat_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_stacy_chat_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_stacy_chat_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/stacy/chat\",\n        pathname: \"/api/stacy/chat\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_stacy_chat_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnN0YWN5JTJGY2hhdCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGc3RhY3klMkZjaGF0LnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ3NEO0FBQ3REO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxxREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMscURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmFwaS12b2ljZS1hZ2VudC1uZXh0anMvP2YzZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9zdGFjeS9jaGF0LnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc3RhY3kvY2hhdFwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3N0YWN5L2NoYXRcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fstacy%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fstacy%2Fchat.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/stacy/chat.ts":
/*!*********************************!*\
  !*** ./pages/api/stacy/chat.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"openai\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([openai__WEBPACK_IMPORTED_MODULE_0__]);\nopenai__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    const { OPENAI_API_KEY } = process.env;\n    if (!OPENAI_API_KEY) {\n        return res.status(500).json({\n            error: \"OpenAI API key not configured\"\n        });\n    }\n    try {\n        const { message, messages, location, sessionId, riskLevel, mode } = req.body;\n        if (!message) {\n            return res.status(400).json({\n                error: \"Message is required\"\n            });\n        }\n        const openai = new openai__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            apiKey: OPENAI_API_KEY\n        });\n        // Build conversation context\n        const conversationHistory = (messages || []).slice(-10).map((m)=>({\n                role: m.role,\n                content: m.content\n            }));\n        // Build system prompt with current context\n        const systemPrompt = `You are Stacy, a professional AI safety companion and emergency dispatcher. Keep responses concise and helpful.\n\nCURRENT CONTEXT:\n- Session: ${sessionId}\n- Risk Level: ${riskLevel}\n- Location: ${location ? `${location.lat.toFixed(4)}, ${location.lng.toFixed(4)}` : \"Unknown\"}\n- Mode: ${mode}\n\nGUIDELINES:\n- For emergencies: Be direct, gather key details, prepare to escalate\n- For general safety: Provide supportive guidance and check-ins  \n- Always validate concerns and provide actionable advice\n- Keep responses under 2 sentences for voice mode\n- Ask ONE focused question at a time\n\nRespond professionally and warmly. Help users feel safe and supported.`;\n        const completion = await openai.chat.completions.create({\n            model: \"gpt-4\",\n            messages: [\n                {\n                    role: \"system\",\n                    content: systemPrompt\n                },\n                ...conversationHistory,\n                {\n                    role: \"user\",\n                    content: message\n                }\n            ],\n            temperature: 0.7,\n            max_tokens: 500\n        });\n        const aiResponse = completion.choices[0]?.message?.content;\n        if (!aiResponse) {\n            throw new Error(\"No response from OpenAI\");\n        }\n        // Analyze the response to determine risk level and actions\n        const riskAnalysis = analyzeRiskLevel(message, aiResponse, riskLevel);\n        const actions = determineActions(aiResponse, riskAnalysis.riskLevel, location);\n        console.log(`🤖 Stacy AI Response for session ${sessionId} (${mode} mode):`);\n        console.log(`📊 Risk: ${riskLevel} → ${riskAnalysis.riskLevel}`);\n        console.log(`🎯 Actions: ${actions.join(\", \") || \"None\"}`);\n        console.log(`💬 Response: ${aiResponse.substring(0, 100)}...`);\n        // Never TTS here - client controls TTS based on mode\n        return res.status(200).json({\n            reply: aiResponse,\n            mode: mode,\n            riskLevel: riskAnalysis.riskLevel,\n            riskChanged: riskAnalysis.riskLevel !== riskLevel,\n            confidence: riskAnalysis.confidence,\n            actions,\n            reasoning: riskAnalysis.reasoning,\n            timestamp: new Date().toISOString(),\n            caseFile: riskAnalysis.riskLevel !== \"SAFE\" ? {\n                id: `case_${sessionId}_${Date.now()}`,\n                sessionId,\n                riskLevel: riskAnalysis.riskLevel,\n                location,\n                timeline: [\n                    {\n                        timestamp: new Date().toISOString(),\n                        event: `User reported: ${message}`,\n                        riskLevel: riskAnalysis.riskLevel,\n                        aiResponse: aiResponse\n                    }\n                ]\n            } : null\n        });\n    } catch (error) {\n        console.error(\"❌ Stacy AI error:\", error);\n        // Fallback response for critical situations\n        const isCritical = req.body.message?.toLowerCase().match(/(help|emergency|danger|police|attacked|following)/);\n        return res.status(500).json({\n            error: \"AI processing error\",\n            fallback: true,\n            reply: isCritical ? \"I'm having technical difficulties, but I understand this may be urgent. Please call 911 immediately if you're in immediate danger. I'm working to restore full service.\" : \"I'm experiencing technical difficulties. Please try again, or use the emergency button if this is urgent.\",\n            riskLevel: isCritical ? \"CRITICAL\" : \"ELEVATED\",\n            actions: isCritical ? [\n                \"emergency_handoff\"\n            ] : []\n        });\n    }\n}\nfunction analyzeRiskLevel(userMessage, aiResponse, currentRisk) {\n    const message = userMessage.toLowerCase();\n    const response = aiResponse.toLowerCase();\n    // Critical indicators\n    const criticalKeywords = [\n        \"help\",\n        \"emergency\",\n        \"danger\",\n        \"attacked\",\n        \"following me\",\n        \"scared\",\n        \"unsafe\",\n        \"call police\",\n        \"threat\",\n        \"weapon\",\n        \"violence\",\n        \"hurt\",\n        \"stalking\",\n        \"chase\",\n        \"trapped\"\n    ];\n    // Elevated indicators  \n    const elevatedKeywords = [\n        \"suspicious\",\n        \"uncomfortable\",\n        \"worried\",\n        \"alone\",\n        \"dark\",\n        \"lost\",\n        \"nervous\",\n        \"strange\",\n        \"creepy\",\n        \"uneasy\",\n        \"concerned\",\n        \"anxious\"\n    ];\n    const criticalCount = criticalKeywords.filter((keyword)=>message.includes(keyword) || response.includes(keyword)).length;\n    const elevatedCount = elevatedKeywords.filter((keyword)=>message.includes(keyword) || response.includes(keyword)).length;\n    // AI response analysis - look for dispatcher language\n    const dispatcherLanguage = [\n        \"emergency services\",\n        \"law enforcement\",\n        \"immediate\",\n        \"critical\",\n        \"urgent\",\n        \"dispatch\",\n        \"officer\",\n        \"patrol\",\n        \"backup\"\n    ].some((term)=>response.includes(term));\n    let riskLevel = \"SAFE\";\n    let confidence = 0.5;\n    let reasoning = \"Standard safety check\";\n    if (criticalCount >= 2 || dispatcherLanguage) {\n        riskLevel = \"CRITICAL\";\n        confidence = 0.9;\n        reasoning = `Critical keywords detected (${criticalCount}) or emergency response language identified`;\n    } else if (criticalCount >= 1) {\n        riskLevel = \"CRITICAL\";\n        confidence = 0.8;\n        const detectedKeyword = criticalKeywords.find((k)=>message.includes(k) || response.includes(k));\n        reasoning = `Critical safety keyword detected: ${detectedKeyword}`;\n    } else if (elevatedCount >= 2) {\n        riskLevel = \"ELEVATED\";\n        confidence = 0.7;\n        reasoning = `Multiple concern indicators (${elevatedCount})`;\n    } else if (elevatedCount >= 1) {\n        riskLevel = \"ELEVATED\";\n        confidence = 0.6;\n        const detectedKeyword = elevatedKeywords.find((k)=>message.includes(k) || response.includes(k));\n        reasoning = `Safety concern detected: ${detectedKeyword}`;\n    } else if (currentRisk === \"CRITICAL\") {\n        // Don't downgrade from CRITICAL without explicit safety confirmation\n        riskLevel = \"CRITICAL\";\n        confidence = 0.7;\n        reasoning = \"Maintaining CRITICAL status - no explicit safety confirmation\";\n    }\n    return {\n        riskLevel,\n        confidence,\n        reasoning\n    };\n}\nfunction determineActions(aiResponse, riskLevel, location) {\n    const response = aiResponse.toLowerCase();\n    const actions = [];\n    // Look for tool calling language in AI response\n    if (response.includes(\"emergency services\") || response.includes(\"call police\") || response.includes(\"dispatch\")) {\n        actions.push(\"emergency_handoff\");\n    }\n    if (response.includes(\"alert\") || response.includes(\"notify\") || response.includes(\"contact\")) {\n        actions.push(\"send_sms\");\n    }\n    if (response.includes(\"location\") && !location) {\n        actions.push(\"request_location\");\n    }\n    // Risk-based automatic actions\n    if (riskLevel === \"CRITICAL\") {\n        if (!actions.includes(\"emergency_handoff\")) {\n            actions.push(\"emergency_handoff\");\n        }\n        if (location && !actions.includes(\"send_sms\")) {\n            actions.push(\"send_sms\");\n        }\n    }\n    if (riskLevel === \"ELEVATED\" && location) {\n        if (!actions.includes(\"send_sms\")) {\n            actions.push(\"send_sms\");\n        }\n    }\n    return actions;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/stacy/chat.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fstacy%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fstacy%2Fchat.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();